name: Build binaries and upload artifacts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  # release:
  #   strategy:
  #     matrix:
  #       platform:
  #       #   - release_for: ARM64 macOS
  #       #     target: aarch64-apple-darwin
  #       #     binary: "tgh"
  #       #     host: "macos-latest"
  #         - release_for: ARM64 Linux
  #           target: aarch64-unknown-linux-gnu
  #           binary: "tgh"
  #           host: "ubuntu-latest"
  #         - release_for: X86_64 Linux
  #           target: x86_64-unknown-linux-gnu
  #           binary: "tgh"
  #           host: "ubuntu-latest"
  #   - release_for: X86_64 Windows
  #     target: x86_64-pc-windows-msvc
  #     binary: "tgh.exe"
  #     host: "windows-latest"
  #   - release_for: X86_64 macOS
  #     target: x86_64-apple-darwin
  #     binary: "tgh"
  #     host: "macos-latest"

  # runs-on: ${{ matrix.platform.host }}
  # steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Setup Rust
  #     uses: actions-rs/toolchain@v1
  #     with:
  #       toolchain: stable
  #       override: true
  #       target: ${{ matrix.platform.target }}

  #   - name: Build
  #     run: cargo build --release --target ${{ matrix.platform.target }}

  #   - name: Upload artifacts
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: binaries
  #       path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }}

  release-linux:
    strategy:
      matrix:
        platform:
          - release_for: ARM64 Linux
            target: aarch64-unknown-linux-gnu
            binary: "tgh-linux-arm64"
            host: "ubuntu-latest"
          - release_for: X86_64 Linux
            target: x86_64-unknown-linux-gnu
            binary: "tgh-linux-x86_64"
            host: "ubuntu-latest"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target }}

      - name: Setup cross-compilation
        run: cargo install -f cross

      - name: Build
        run: cross build --release --target ${{ matrix.platform.target }}

      - name: Rename binary
        run: mv target/${{ matrix.platform.target }}/release/tgh target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }}

  release-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Rename binary
        run: mv target/release/tgh.exe target/release/tgh-windows-x86_64.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: target/release/tgh-windows-x86_64.exe

  release-macos:
    strategy: 
      matrix:
        platform:
          - release_for: X86_64 macOS
            target: x86_64-apple-darwin
            binary: "tgh-macos-x86_64"
            host: "macos-latest"
          - release_for: ARM64 macOS
            target: aarch64-apple-darwin
            binary: "tgh-macos-arm64"
            host: "macos-latest"
    
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target }}

      - name: Setup cross-compilation
        run: cargo install -f cross

      - name: Build
        run: cross build --release --target ${{ matrix.platform.target }}

      - name: Rename binary
        run: mv target/${{ matrix.platform.target }}/release/tgh target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }}